openapi: 3.0.0
info:
  title: PlantParent API
  description: API for managing users, presets, hardware components, AI recommendations, and tutorials.
  version: 1.0.0
servers:
  - url: https://plantparent.com/api
tags:
  - name: Users
    description: User management
  - name: Presets
    description: Preset management
  - name: Hardware
    description: Hardware management
  - name: AI
    description: AI recommendations
    
paths:
  /users/register:
    post:
      tags:
        - Users
      summary: Registers a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "john_doe"
                password:
                  type: string
                  example: "password123"
                email:
                  type: string
                  example: "john.doe@example.com"
      responses:
        '201':
          description: User successfully registered
        '400':
          description: Input validation failed

  /users/login:
    post:
      tags:
        - Users
      summary: Authenticates a user and returns a session token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "john_doe"
                password:
                  type: string
                  example: "password123"
      responses:
        '200':
          description: Login successful, returns session token
          content:
            application/json:
              schema:
                type: string
                example: "Bearer token123"
        '401':
          description: Invalid credentials

  /users/logout:
    post:
      tags:
        - Users
      summary: Logs out the user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Logout successful
        '401':
          description: Invalid session token

  /presets:
    get:
      tags:
        - Presets
      summary: Retrieves all presets for the logged-in user
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Returns the list of presets
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    presetName:
                      type: string
                      example: "Morning Watering"
                    calculationValues:
                      type: array
                      items:
                        type: number
                      example: [1.0, 2.0, 3.0]
                    createdBy:
                      type: string
                      example: "john_doe"
        '401':
          description: Invalid session token

    post:
      tags:
        - Presets
      summary: Saves a new preset for the logged-in user
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                presetName:
                  type: string
                  example: "Morning Watering"
                calculationValues:
                  type: array
                  items:
                    type: number
                  example: [1.0, 2.0, 3.0]
                createdBy:
                  type: string
                  example: "john_doe"
      responses:
        '201':
          description: Preset successfully saved
        '400':
          description: Input validation failed

  /presets/{presetId}:
    delete:
      tags:
        - Presets
      summary: Deletes a specific preset
      security:
        - bearerAuth: []
      parameters:
        - name: presetId
          in: path
          required: true
          schema:
            type: string
          example: "preset123"
      responses:
        '200':
          description: Preset deleted successfully
        '404':
          description: Preset not found

  /hardware/{componentId}/status:
    get:
      tags:
        - Hardware
      summary: Retrieves the current status of a hardware component
      security:
        - bearerAuth: []
      parameters:
        - name: componentId
          in: path
          required: true
          schema:
            type: string
          example: "light123"
      responses:
        '200':
          description: Returns the hardware status
          content:
            application/json:
              schema:
                type: object
                properties:
                  componentName:
                    type: string
                    example: "Light"
                  isActive:
                    type: boolean
                    example: true
                  status:
                    type: object
                    properties:
                      brightnessLevel:
                        type: integer
                        example: 75
        '404':
          description: Component not found

  /hardware/{componentId}/settings:
    post:
      tags:
        - Hardware
      summary: Updates settings of a hardware component
      security:
        - bearerAuth: []
      parameters:
        - name: componentId
          in: path
          required: true
          schema:
            type: string
          example: "light123"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                settings:
                  type: object
                  properties:
                    brightnessLevel:
                      type: integer
                      example: 85
      responses:
        '200':
          description: Settings updated successfully
        '400':
          description: Input validation failed

  /ai/recommend:
    post:
      tags:
        - AI
      summary: Provides AI recommendations based on user inputs
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userPrompt:
                  type: string
                  example: "How often should I water my plants?"
      responses:
        '200':
          description: AI recommendation returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  aiResponse:
                    type: string
                    example: "Based on your inputs, we recommend watering every 3 days."
        '400':
          description: Invalid input

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
